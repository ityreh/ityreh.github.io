{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation for ityreh This documenation page is... Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout 1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#documentation-for-ityreh","text":"This documenation page is...","title":"Documentation for ityreh"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"About","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"mouseless/","text":"Setup your mouseless development environment To setup my mouseless development environment I followed this book by Matthieu Cneude and I really recommend it. The mouseless development environment is about using the mouse as less as possible to feel more comfortable and be more productive as a developer. You will see what I mean when you start using this approach in your daily development.","title":"Setup your mouseless development environment"},{"location":"mouseless/#setup-your-mouseless-development-environment","text":"To setup my mouseless development environment I followed this book by Matthieu Cneude and I really recommend it. The mouseless development environment is about using the mouse as less as possible to feel more comfortable and be more productive as a developer. You will see what I mean when you start using this approach in your daily development.","title":"Setup your mouseless development environment"},{"location":"starter/","text":"Starter The starters help you kick off into a project so you can get started right away. React Electron Initialize your react client in your project folder and cd into the client folder. 1 2 create-react-app client cd client From there install electron and a package to detect if it runs in a development or production environment. 1 2 npm install --save-dev electron npm install electron-is-dev We create the main electron script in public/ as electron.js and enter the following code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 const path = require ( \"path\" ); const { app , BrowserWindow } = require ( \"electron\" ); const isDev = require ( \"electron-is-dev\" ); function createWindow () { const win = new BrowserWindow ({ width : 800 , height : 600 , webPreferences : { nodeIntegration : true } }); win . loadURL ( isDev ? \"http://localhost:3000\" : `file:// ${ path . join ( __dirname , \"../build/index.html\" ) } ` ); if ( isDev ) { win . webContents . openDevTools ({ mode : \"detach\" }); } } app . whenReady (). then ( createWindow ); app . on ( \"window-all-closed\" , () => { if ( process . platform !== \"darwin\" ) { app . quit (); } }); app . on ( \"activate\" , () => { if ( BrowserWindow . getAllWindows (). length === 0 ) { createWindow (); } }); In package.json you can configure this script as the starting point. 1 2 3 { \"main\" : \"public/electron.js\" , // Add s tart i n g poi nt here } Now we configure the behavior for starting our development environment and we use two more packages for it. 1 npm i --save-dev concurrently wait-on The configuration is done in the package.json again. 1 2 3 4 5 6 { \"scripts\" : { \"dev\" : \"concurrently -k \\\"BROWSER=none npm start\\\" \\\"npm:electron\\\"\" , \"electron\" : \"wait-on tcp:3000 && electron .\" , } } To run the app in development mode, you can use npm run dev .","title":"Starter"},{"location":"starter/#starter","text":"The starters help you kick off into a project so you can get started right away.","title":"Starter"},{"location":"starter/#react-electron","text":"Initialize your react client in your project folder and cd into the client folder. 1 2 create-react-app client cd client From there install electron and a package to detect if it runs in a development or production environment. 1 2 npm install --save-dev electron npm install electron-is-dev We create the main electron script in public/ as electron.js and enter the following code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 const path = require ( \"path\" ); const { app , BrowserWindow } = require ( \"electron\" ); const isDev = require ( \"electron-is-dev\" ); function createWindow () { const win = new BrowserWindow ({ width : 800 , height : 600 , webPreferences : { nodeIntegration : true } }); win . loadURL ( isDev ? \"http://localhost:3000\" : `file:// ${ path . join ( __dirname , \"../build/index.html\" ) } ` ); if ( isDev ) { win . webContents . openDevTools ({ mode : \"detach\" }); } } app . whenReady (). then ( createWindow ); app . on ( \"window-all-closed\" , () => { if ( process . platform !== \"darwin\" ) { app . quit (); } }); app . on ( \"activate\" , () => { if ( BrowserWindow . getAllWindows (). length === 0 ) { createWindow (); } }); In package.json you can configure this script as the starting point. 1 2 3 { \"main\" : \"public/electron.js\" , // Add s tart i n g poi nt here } Now we configure the behavior for starting our development environment and we use two more packages for it. 1 npm i --save-dev concurrently wait-on The configuration is done in the package.json again. 1 2 3 4 5 6 { \"scripts\" : { \"dev\" : \"concurrently -k \\\"BROWSER=none npm start\\\" \\\"npm:electron\\\"\" , \"electron\" : \"wait-on tcp:3000 && electron .\" , } } To run the app in development mode, you can use npm run dev .","title":"React Electron"}]}