{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wikityreh This Wiki is a starting point for software development projects and one of my electronic memories. Basic hints for Software Development This is a list of methods and paradigms that help me getting better in software development. Setup a mouseless development environment To setup my mouseless development environment I followed this book by Matthieu Cneude and I really recommend it. The mouseless development environment is about using the mouse as less as possible to feel more comfortable and be more productive as a developer. You will see what I mean when you start using this approach in your daily development. Follow the 12 factor app guide The 12 factor app guide is a really good list of methodologies building software. Clean Code Source code is read much more often than it is written, so it is important to keep the code clean. What this means is explained by Robert C. Martin in his book Clean Code.","title":"Home"},{"location":"#wikityreh","text":"This Wiki is a starting point for software development projects and one of my electronic memories.","title":"Wikityreh"},{"location":"#basic-hints-for-software-development","text":"This is a list of methods and paradigms that help me getting better in software development.","title":"Basic hints for Software Development"},{"location":"#setup-a-mouseless-development-environment","text":"To setup my mouseless development environment I followed this book by Matthieu Cneude and I really recommend it. The mouseless development environment is about using the mouse as less as possible to feel more comfortable and be more productive as a developer. You will see what I mean when you start using this approach in your daily development.","title":"Setup a mouseless development environment"},{"location":"#follow-the-12-factor-app-guide","text":"The 12 factor app guide is a really good list of methodologies building software.","title":"Follow the 12 factor app guide"},{"location":"#clean-code","text":"Source code is read much more often than it is written, so it is important to keep the code clean. What this means is explained by Robert C. Martin in his book Clean Code.","title":"Clean Code"},{"location":"about/","text":"About","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"starter/","text":"Starter The starters help you kick off into a project so you can get started right away. React Electron Initialize your react client in your project folder and cd into the client folder. 1 2 create-react-app client cd client From there install electron and a package to detect if it runs in a development or production environment. 1 2 npm install --save-dev electron npm install electron-is-dev We create the main electron script in public/ as electron.js and enter the following code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 const path = require ( \"path\" ); const { app , BrowserWindow } = require ( \"electron\" ); const isDev = require ( \"electron-is-dev\" ); function createWindow () { const win = new BrowserWindow ({ width : 800 , height : 600 , webPreferences : { nodeIntegration : true } }); win . loadURL ( isDev ? \"http://localhost:3000\" : `file:// ${ path . join ( __dirname , \"../build/index.html\" ) } ` ); if ( isDev ) { win . webContents . openDevTools ({ mode : \"detach\" }); } } app . whenReady (). then ( createWindow ); app . on ( \"window-all-closed\" , () => { if ( process . platform !== \"darwin\" ) { app . quit (); } }); app . on ( \"activate\" , () => { if ( BrowserWindow . getAllWindows (). length === 0 ) { createWindow (); } }); In package.json you can configure this script as the starting point. 1 2 3 { \"main\" : \"public/electron.js\" , // Add s tart i n g poi nt here } Now we configure the behavior for starting our development environment and we use two more packages for it. 1 npm i --save-dev concurrently wait-on The configuration is done in the package.json again. 1 2 3 4 5 6 { \"scripts\" : { \"dev\" : \"concurrently -k \\\"BROWSER=none npm start\\\" \\\"npm:electron\\\"\" , \"electron\" : \"wait-on tcp:3000 && electron .\" , } } To run the app in development mode, you can use npm run dev .","title":"Starter"},{"location":"starter/#starter","text":"The starters help you kick off into a project so you can get started right away.","title":"Starter"},{"location":"starter/#react-electron","text":"Initialize your react client in your project folder and cd into the client folder. 1 2 create-react-app client cd client From there install electron and a package to detect if it runs in a development or production environment. 1 2 npm install --save-dev electron npm install electron-is-dev We create the main electron script in public/ as electron.js and enter the following code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 const path = require ( \"path\" ); const { app , BrowserWindow } = require ( \"electron\" ); const isDev = require ( \"electron-is-dev\" ); function createWindow () { const win = new BrowserWindow ({ width : 800 , height : 600 , webPreferences : { nodeIntegration : true } }); win . loadURL ( isDev ? \"http://localhost:3000\" : `file:// ${ path . join ( __dirname , \"../build/index.html\" ) } ` ); if ( isDev ) { win . webContents . openDevTools ({ mode : \"detach\" }); } } app . whenReady (). then ( createWindow ); app . on ( \"window-all-closed\" , () => { if ( process . platform !== \"darwin\" ) { app . quit (); } }); app . on ( \"activate\" , () => { if ( BrowserWindow . getAllWindows (). length === 0 ) { createWindow (); } }); In package.json you can configure this script as the starting point. 1 2 3 { \"main\" : \"public/electron.js\" , // Add s tart i n g poi nt here } Now we configure the behavior for starting our development environment and we use two more packages for it. 1 npm i --save-dev concurrently wait-on The configuration is done in the package.json again. 1 2 3 4 5 6 { \"scripts\" : { \"dev\" : \"concurrently -k \\\"BROWSER=none npm start\\\" \\\"npm:electron\\\"\" , \"electron\" : \"wait-on tcp:3000 && electron .\" , } } To run the app in development mode, you can use npm run dev .","title":"React Electron"}]}